import { Pressable, StyleSheet, Text, View } from 'react-native';
import { TaskType } from '../../screens/Home';
import { styles } from './styles';
import Svg from 'react-native-svg';

type TaskPerSeProps = TaskType & {
  onRemoveTask: (taskName: string) => void;
  onCheckTask: (taskName: string) => void;
};
export function TaskPerSe({
  task,
  done,
  onRemoveTask,
  onCheckTask,
}: TaskPerSeProps) {
  const renderRightButton = (done: boolean) => {
    return done ? (
      <Pressable onPress={() => onCheckTask(task)}>
        <Svg style={styles.radioCircle}>
          <svg
            width="18"
            height="18"
            viewBox="0 0 18 18"
            fill="none"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              d="M8.98019 16.4261C13.0728 16.4261 16.3904 13.1085 16.3904 9.0159C16.3904 4.92333 13.0728 1.60565 8.98019 1.60565C4.88763 1.60565 1.56995 4.92333 1.56995 9.0159C1.56995 13.1085 4.88763 16.4261 8.98019 16.4261Z"
              fill="#5E60CE"
            />
            <path
              d="M8.96428 1.85955C10.3765 1.85955 11.7571 2.27834 12.9313 3.06294C14.1056 3.84755 15.0208 4.96275 15.5612 6.2675C16.1017 7.57225 16.2431 9.00797 15.9676 10.3931C15.6921 11.7782 15.012 13.0505 14.0134 14.0491C13.0148 15.0478 11.7424 15.7278 10.3573 16.0033C8.9722 16.2789 7.53648 16.1375 6.23173 15.597C4.92697 15.0566 3.81178 14.1413 3.02717 12.9671C2.24257 11.7928 1.82378 10.4123 1.82378 9.00005C1.8311 7.10852 2.58574 5.29656 3.92326 3.95904C5.26079 2.62152 7.07275 1.86687 8.96428 1.85955ZM8.96428 0.272778C7.23972 0.279833 5.55592 0.797669 4.12543 1.76091C2.69494 2.72416 1.58191 4.08962 0.926831 5.68493C0.271755 7.28024 0.104012 9.03387 0.444777 10.7244C0.785541 12.415 1.61954 13.9667 2.84148 15.1837C4.06342 16.4006 5.61852 17.2283 7.31046 17.5621C9.00241 17.896 10.7553 17.7211 12.348 17.0595C13.9406 16.3979 15.3015 15.2793 16.2589 13.8449C17.2163 12.4105 17.7272 10.7246 17.7273 9.00005C17.7273 7.85096 17.5003 6.71318 17.0595 5.652C16.6187 4.59083 15.9727 3.62715 15.1585 2.81628C14.3443 2.00541 13.378 1.36331 12.315 0.926827C11.2521 0.490346 10.1134 0.268077 8.96428 0.272778Z"
              fill="#5E60CE"
            />
            <path
              d="M12.4307 6.34209L8.09877 10.674L5.6163 8.19156L4.7804 9.02747L8.09877 12.3458L13.2666 7.178L12.4307 6.34209Z"
              fill="#F2F2F2"
            />
          </svg>
        </Svg>
      </Pressable>
    ) : (
      <Pressable style={styles.radioCircle} onPress={() => onCheckTask(task)} />
    );
  };

  return (
    <View style={styles.container}>
      {renderRightButton(done)}
      <Text style={[styles.taskText, done && styles.taskTextDone]}>{task}</Text>
      <Pressable onPress={() => onRemoveTask(task)} style={svg.svg}>
        <Svg>
          <svg
            width="16"
            height="16"
            viewBox="0 0 13 14"
            fill="none"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              d="M12.478 2.16712C12.4754 2.03061 12.4295 1.89846 12.3469 1.78975C12.2642 1.68104 12.1492 1.6014 12.0184 1.56232C11.9596 1.53782 11.8974 1.52252 11.8339 1.51696H8.28678C8.1525 1.07791 7.88082 0.693554 7.51174 0.420471C7.14265 0.147388 6.69564 0 6.23651 0C5.77738 0 5.33038 0.147388 4.96129 0.420471C4.5922 0.693554 4.32053 1.07791 4.18625 1.51696H0.639107C0.580679 1.51814 0.522686 1.52729 0.46674 1.54418H0.45162C0.313182 1.58701 0.193338 1.67547 0.11163 1.79515C0.0299214 1.91483 -0.00883041 2.05866 0.00169348 2.20319C0.0122174 2.34771 0.071396 2.48441 0.169579 2.59099C0.267763 2.69757 0.399158 2.76774 0.542339 2.79006L1.25298 12.5334C1.26382 12.9127 1.41693 13.2741 1.68191 13.5458C1.94688 13.8175 2.30435 13.9797 2.68332 14H9.78668C10.1662 13.9804 10.5244 13.8186 10.79 13.5468C11.0556 13.2751 11.2092 12.9132 11.22 12.5334L11.9277 2.79914C12.0802 2.77797 12.22 2.70232 12.3212 2.58615C12.4223 2.46999 12.478 2.32116 12.478 2.16712ZM6.23651 1.21456C6.3661 1.21458 6.49427 1.24146 6.61294 1.29351C6.73161 1.34556 6.8382 1.42164 6.92598 1.51696H5.54704C5.63459 1.42135 5.74114 1.34507 5.85986 1.29299C5.97859 1.24092 6.10687 1.21421 6.23651 1.21456ZM9.78668 12.7904H2.68332C2.60168 12.7904 2.47467 12.6573 2.45955 12.4457L1.75798 2.81123H10.715L10.0135 12.4457C9.99836 12.6573 9.87135 12.7904 9.78668 12.7904Z"
              fill="#808080"
            />
          </svg>
        </Svg>
      </Pressable>
    </View>
  );
}

const svg = StyleSheet.create({
  svg: {
    width: 20,
    height: 20,
  },
});
